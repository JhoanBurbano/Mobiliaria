{"ast":null,"code":"import _asyncToGenerator from \"/media/jhoanburbano/ubuntu-data/jhoanburbano/projects/angular/Architect/_client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/router\";\nexport class ProfileService {\n  constructor(http, cookie, router) {\n    this.http = http;\n    this.cookie = cookie;\n    this.router = router;\n    this.url = \"http://localhost:4000/profile/\";\n  }\n\n  getData(psw) {\n    return this.http.get(`${this.url}?psw=${psw}`);\n  }\n\n  postImg(formData, namefile) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.http.post(`${_this.url}uploads?namefile=${namefile}`, formData);\n    })();\n  }\n\n  updateProfile(formData, id) {\n    return this.http.put(`${this.url}update/${id}`, formData).pipe(tap(res => {\n      if (this.cookie.get('USER') !== `${res.name} ${res.lastname}`) {\n        this.cookie.delete(\"USER\", '/', 'localhost', false, \"None\");\n        this.cookie.set('USER', `${res.name} ${res.lastname}`, parseInt(res.expiresIn), '/', 'localhost', false, \"None\");\n      }\n    }));\n  }\n\n}\n\nProfileService.ɵfac = function ProfileService_Factory(t) {\n  return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService), i0.ɵɵinject(i3.Router));\n};\n\nProfileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProfileService,\n  factory: ProfileService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/media/jhoanburbano/ubuntu-data/jhoanburbano/projects/angular/Architect/_client/src/app/services/profile.service.ts"],"names":["tap","i0","i1","i2","i3","ProfileService","constructor","http","cookie","router","url","getData","psw","get","postImg","formData","namefile","post","updateProfile","id","put","pipe","res","name","lastname","delete","set","parseInt","expiresIn","ɵfac","ProfileService_Factory","t","ɵɵinject","HttpClient","CookieService","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,GAAT,QAAoB,MAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,MAAf,EAAuB;AAC9B,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,GAAL,GAAW,gCAAX;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAD,EAAM;AACT,WAAO,KAAKL,IAAL,CAAUM,GAAV,CAAe,GAAE,KAAKH,GAAI,QAAOE,GAAI,EAArC,CAAP;AACH;;AACKE,EAAAA,OAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAA;;AAAA;AAC9B,aAAO,KAAI,CAACT,IAAL,CAAUU,IAAV,CAAgB,GAAE,KAAI,CAACP,GAAI,oBAAmBM,QAAS,EAAvD,EAA0DD,QAA1D,CAAP;AAD8B;AAEjC;;AACDG,EAAAA,aAAa,CAACH,QAAD,EAAWI,EAAX,EAAe;AACxB,WAAO,KAAKZ,IAAL,CAAUa,GAAV,CAAe,GAAE,KAAKV,GAAI,UAASS,EAAG,EAAtC,EAAyCJ,QAAzC,EAAmDM,IAAnD,CAAwDrB,GAAG,CAAEsB,GAAD,IAAS;AACxE,UAAI,KAAKd,MAAL,CAAYK,GAAZ,CAAgB,MAAhB,MAA6B,GAAES,GAAG,CAACC,IAAK,IAAGD,GAAG,CAACE,QAAS,EAA5D,EAA+D;AAC3D,aAAKhB,MAAL,CAAYiB,MAAZ,CAAmB,MAAnB,EAA2B,GAA3B,EAAgC,WAAhC,EAA6C,KAA7C,EAAoD,MAApD;AACA,aAAKjB,MAAL,CAAYkB,GAAZ,CAAgB,MAAhB,EAAyB,GAAEJ,GAAG,CAACC,IAAK,IAAGD,GAAG,CAACE,QAAS,EAApD,EAAuDG,QAAQ,CAACL,GAAG,CAACM,SAAL,CAA/D,EAAgF,GAAhF,EAAqF,WAArF,EAAkG,KAAlG,EAAyG,MAAzG;AACH;AACJ,KALiE,CAA3D,CAAP;AAMH;;AApBuB;;AAsB5BvB,cAAc,CAACwB,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAI1B,cAAV,EAA0BJ,EAAE,CAAC+B,QAAH,CAAY9B,EAAE,CAAC+B,UAAf,CAA1B,EAAsDhC,EAAE,CAAC+B,QAAH,CAAY7B,EAAE,CAAC+B,aAAf,CAAtD,EAAqFjC,EAAE,CAAC+B,QAAH,CAAY5B,EAAE,CAAC+B,MAAf,CAArF,CAAP;AAAsH,CAAjL;;AACA9B,cAAc,CAAC+B,KAAf,GAAuB,aAAcnC,EAAE,CAACoC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEjC,cAAT;AAAyBkC,EAAAA,OAAO,EAAElC,cAAc,CAACwB,IAAjD;AAAuDW,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/router\";\nexport class ProfileService {\n    constructor(http, cookie, router) {\n        this.http = http;\n        this.cookie = cookie;\n        this.router = router;\n        this.url = \"http://localhost:4000/profile/\";\n    }\n    getData(psw) {\n        return this.http.get(`${this.url}?psw=${psw}`);\n    }\n    async postImg(formData, namefile) {\n        return this.http.post(`${this.url}uploads?namefile=${namefile}`, formData);\n    }\n    updateProfile(formData, id) {\n        return this.http.put(`${this.url}update/${id}`, formData).pipe(tap((res) => {\n            if (this.cookie.get('USER') !== `${res.name} ${res.lastname}`) {\n                this.cookie.delete(\"USER\", '/', 'localhost', false, \"None\");\n                this.cookie.set('USER', `${res.name} ${res.lastname}`, parseInt(res.expiresIn), '/', 'localhost', false, \"None\");\n            }\n        }));\n    }\n}\nProfileService.ɵfac = function ProfileService_Factory(t) { return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService), i0.ɵɵinject(i3.Router)); };\nProfileService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ProfileService, factory: ProfileService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}