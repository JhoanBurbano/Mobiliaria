{"ast":null,"code":"import _asyncToGenerator from \"/media/jhoanburbano/ubuntu-data/jhoanburbano/projects/angular/Architect/_client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, router, toastr, _userService, homeS) {\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n    this._userService = _userService;\n    this.homeS = homeS;\n    this.SITE_KEY = '6Le1n0cdAAAAADIbgkv_eIFWhJK0M06pxzOFPiGh';\n    this.siteKey = \"6Le1n0cdAAAAADIbgkv_eIFWhJK0M06pxzOFPiGh\";\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required //  Validators.email\n      ],\n      password: ['', Validators.required // Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])([A-Za-z\\d$@$!%*?&]|[^ ]){8,15}$/),\n      ],\n      captcha: [null, Validators.required]\n    });\n  }\n\n  ngOnInit() {}\n\n  recPass() {\n    return _asyncToGenerator(function* () {\n      const {\n        value: email,\n        isDenied\n      } = yield Swal.fire({\n        title: 'Input email address',\n        input: 'email',\n        inputLabel: 'Your email address',\n        inputPlaceholder: 'Enter your email address',\n        showDenyButton: true,\n        denyButtonText: \"cancelar\",\n        confirmButtonText: \"recuperar\"\n      });\n    })();\n  }\n\n  loginUser() {\n    var _a, _b;\n\n    const USUARIO = {\n      name: \"\",\n      lastname: \"\",\n      rol: \"\",\n      number: 0,\n      email: (_a = this.loginForm.get('email')) === null || _a === void 0 ? void 0 : _a.value,\n      password: (_b = this.loginForm.get('password')) === null || _b === void 0 ? void 0 : _b.value\n    };\n    console.log(USUARIO);\n\n    this._userService.login(USUARIO).subscribe(data => {\n      console.log(data);\n      this.toastr.success(`${data.dataUser.name.toUpperCase()} Welcome to ARCHITETCS!`, \"User Logged\");\n      location.reload();\n    }, error => {\n      // this.toastr.error('Something is wrong', 'Error Login')\n      Swal.fire({\n        titleText: 'ERROR LOGIN',\n        text: 'Something is wrong',\n        icon: 'error',\n        confirmButtonText: 'Try again',\n        confirmButtonColor: '#d55',\n        confirmButtonAriaLabel: 'ssss',\n        toast: false,\n        // timer: 2000,\n        // timerProgressBar: true,\n        showCloseButton: false,\n        customClass: {\n          confirmButton: `\n          outline: none;\n          nav-index:none;\n          border:none\n          `\n        }\n      });\n      console.log(error);\n      this.router.navigate(['/auth/login']);\n    });\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"sources":["/media/jhoanburbano/ubuntu-data/jhoanburbano/projects/angular/Architect/_client/src/app/auth/components/login/login.component.ts"],"names":["__decorate","Component","Validators","Swal","LoginComponent","constructor","fb","router","toastr","_userService","homeS","SITE_KEY","siteKey","loginForm","group","email","required","password","captcha","ngOnInit","recPass","value","isDenied","fire","title","input","inputLabel","inputPlaceholder","showDenyButton","denyButtonText","confirmButtonText","loginUser","_a","_b","USUARIO","name","lastname","rol","number","get","console","log","login","subscribe","data","success","dataUser","toUpperCase","location","reload","error","titleText","text","icon","confirmButtonColor","confirmButtonAriaLabel","toast","showCloseButton","customClass","confirmButton","navigate","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nlet LoginComponent = class LoginComponent {\n    constructor(fb, router, toastr, _userService, homeS) {\n        this.fb = fb;\n        this.router = router;\n        this.toastr = toastr;\n        this._userService = _userService;\n        this.homeS = homeS;\n        this.SITE_KEY = '6Le1n0cdAAAAADIbgkv_eIFWhJK0M06pxzOFPiGh';\n        this.siteKey = \"6Le1n0cdAAAAADIbgkv_eIFWhJK0M06pxzOFPiGh\";\n        this.loginForm = this.fb.group({\n            email: ['', Validators.required,\n                //  Validators.email\n            ],\n            password: [\n                '',\n                Validators.required,\n                // Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])([A-Za-z\\d$@$!%*?&]|[^ ]){8,15}$/),\n            ],\n            captcha: [\n                null,\n                Validators.required\n            ]\n        });\n    }\n    ngOnInit() {\n    }\n    async recPass() {\n        const { value: email, isDenied } = await Swal.fire({\n            title: 'Input email address',\n            input: 'email',\n            inputLabel: 'Your email address',\n            inputPlaceholder: 'Enter your email address',\n            showDenyButton: true,\n            denyButtonText: \"cancelar\",\n            confirmButtonText: \"recuperar\"\n        });\n    }\n    loginUser() {\n        var _a, _b;\n        const USUARIO = {\n            name: \"\",\n            lastname: \"\",\n            rol: \"\",\n            number: 0,\n            email: (_a = this.loginForm.get('email')) === null || _a === void 0 ? void 0 : _a.value,\n            password: (_b = this.loginForm.get('password')) === null || _b === void 0 ? void 0 : _b.value,\n        };\n        console.log(USUARIO);\n        this._userService.login(USUARIO).subscribe(data => {\n            console.log(data);\n            this.toastr.success(`${data.dataUser.name.toUpperCase()} Welcome to ARCHITETCS!`, \"User Logged\");\n            location.reload();\n        }, error => {\n            // this.toastr.error('Something is wrong', 'Error Login')\n            Swal.fire({\n                titleText: 'ERROR LOGIN',\n                text: 'Something is wrong',\n                icon: 'error',\n                confirmButtonText: 'Try again',\n                confirmButtonColor: '#d55',\n                confirmButtonAriaLabel: 'ssss',\n                toast: false,\n                // timer: 2000,\n                // timerProgressBar: true,\n                showCloseButton: false,\n                customClass: {\n                    confirmButton: `\n          outline: none;\n          nav-index:none;\n          border:none\n          `\n                }\n            });\n            console.log(error);\n            this.router.navigate(['/auth/login']);\n        });\n    }\n};\nLoginComponent = __decorate([\n    Component({\n        selector: 'app-login',\n        templateUrl: './login.component.html',\n        styleUrls: ['./login.component.scss']\n    })\n], LoginComponent);\nexport { LoginComponent };\n"]},"metadata":{},"sourceType":"module"}